apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Deploys dev and prod clusters on EKS. Note - Repository will be created automatically if it doesn't exist.
  name: create-dev-and-prod-env
  title: Create Dev and Prod Environment
spec:
  owner: guest
  type: service
  parameters:
    - title: Configuration Options
      required:
        - name
      properties:
        name:
          title: Name of the component
          type: string
          description: Name for the dev and prod environment
          ui:autofocus: true
        namespace:
          default: flux-system
          title: Enter namespace within the EKS cluster to deploy this
          type: string
        aws_region:
          default: us-east-1
          title: Region
          type: string
        repoHostUrl:
          type: string
          default: d1vvjck0a1cre3.cloudfront.net
          ui:widget: hidden
        repoUsername:
          type: string
          default: user1
          ui:widget: hidden
        repoName:
          type: string
          default: platform-on-eks-workshop
          ui:widget: hidden
  steps:
    - action: fetch:template
      id: fetch-base
      input:
        url: ./templates-create-dev-and-prod-env/
        values:
          name: ${{ parameters.name }}
          namespace: ${{ parameters.namespace }}
          aws_region: ${{ parameters.aws_region }}
          repoUrl: https://${{ parameters.repoHostUrl }}/${{ parameters.repoUsername }}
      name: Fetch Base
    - id: create-repo
      name: Create GitLab Repository via API
      action: http:backstage:request
      input:
        method: POST
        path: /api/v4/projects
        baseUrl: https://${{ parameters.repoHostUrl }}
        headers:
          PRIVATE-TOKEN: glpat-uwc7Reg5OticgyOV2D4XDG86MQp1OjIH.01.0w1tanjme
          Content-Type: application/json
        body:
          name: ${{ parameters.name }}
          path: ${{ parameters.name }}
          description: Dev and Prod environment created by Backstage
          visibility: private
          initialize_with_readme: true
    - id: publish
      name: Publishing to GitLab repository
      action: publish:gitlab:merge-request
      input:
        repoUrl: ${{ parameters.repoHostUrl }}?repo=${{parameters.name}}&owner=${{ parameters.repoUsername }}
        title: Add new dev and prod environment - ${{parameters.name}}
        description: Create dev and prod clusters template
        sourcePath: .
        targetPath: .
        branchName: add-${{parameters.name}}-env
        removeSourceBranch: true
        commitAction: auto
    - id: create-argocd-app
      name: Create ArgoCD App
      action: cnoe:create-argocd-app
      input:
        appName: ${{parameters.name}}
        appNamespace: ${{parameters.namespace}}
        argoInstance: in-cluster
        projectName: default
        repoUrl: https://${{ parameters.repoHostUrl }}/${{ parameters.repoUsername }}/${{parameters.name}}
        path: "manifests"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: 'catalog-info.yaml'
  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}
      - title: View Merge Request
        icon: gitlab
        url: ${{ steps['publish'].output.mergeRequestUrl }}
