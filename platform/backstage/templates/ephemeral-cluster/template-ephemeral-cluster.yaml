apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  description: Create a ephemeral kubernetes cluster
  name: ephemeral-cluster
  title: Ephemeral Kubernetes Cluster
spec:
  owner: guest
  type: service
  parameters:
    - properties:
        tfVars:
          title: Terraform variables
          properties:
            name:
              title: Name of the ephemeral cluster
              type: string
            aws_region:
              description: AWS Region
              type: string
          required:
            - name
            - aws_region
          type: object
        adminRoleName:
          description: Name of the role to give the administrative rights
          title: Admin role name
          type: string
        namespace:
          default: flux-system
          title: Existing namespace to create this resource
          type: string
      title: Configuration options
  steps:
    - id: fetchSystem
      name: Fetch System
      action: catalog:fetch
      input:
        entityRef: system:default/system-info
    - action: fetch:template
      id: fetch-base
      input:
        url: ./template-ephemeral-cluster/
        values:
          adminRoleName: ${{parameters.adminRoleName}}
          name: ${{parameters.tfVars.name}}
          namespace: ${{parameters.namespace}}
          tfVars: ${{parameters.tfVars}}
      name: Fetch Base
    - id: publish
      name: Publishing to a gitea git repository
      action: publish:gitea
      input:
        description: Example of ephemeral cluster
        repoUrl: ${{ steps['fetchSystem'].output.entity.spec.hostname }}/gitea?repo=${{parameters.tfVars.name}}
        defaultBranch: main
    - id: create-argocd-app
      name: Create ArgoCD App
      action: cnoe:create-argocd-app
      input:
        appName: ${{parameters.tfVars.name}}
        appNamespace: ${{parameters.namespace}}
        argoInstance: in-cluster
        projectName: default
        # necessary until we generate our own cert
        repoUrl: http://my-gitea-http.gitea.svc.cluster.local:3000/giteaAdmin/${{parameters.tfVars.name}}
        path: "manifests"
    - id: register
      name: Register
      action: catalog:register
      input:
        repoContentsUrl: ${{ steps['publish'].output.repoContentsUrl }}
        catalogInfoPath: 'catalog-info.yaml'
  output:
    links:
      - title: Open in catalog
        icon: catalog
        entityRef: ${{ steps['register'].output.entityRef }}