apiVersion: scaffolder.backstage.io/v1beta3
kind: Template
metadata:
  name: eks-cluster-template
  title: Deploy EKS Cluster with kro
  description: Creates a new EKS cluster. v1
spec:
  owner: user:guest
  type: service
  parameters:
    - title: EKS Cluster Information
      required:
        - clusterName
        - environment
        - region
        - k8sVersion
        - managementAccountId
        - tenant
        - accountId
      properties:
        clusterName:
          title: EKS Cluster Name
          type: string
          description: Name of the EKS cluster
          ui:autofocus: true
          default: "cluster-test"
        environment:
          title: Environment
          type: string
          description: Environment (e.g., dev, test, prod)
          default: "test"
        region:
          title: AWS Region
          type: string
          description: AWS Region for the EKS cluster
          default: "eu-central-1"
        k8sVersion:
          title: Kubernetes Version
          type: string
          description: Kubernetes version for the EKS cluster
          default: "1.31"
        accountId:
          title: Account ID
          type: string
          description: AWS Account ID
          default: "123456789012"
        managementAccountId:
          title: Management Account ID
          type: string
          description: AWS Management Account ID
          default: "123456789012"
        tenant:
          title: Tenant Name
          type: string
          description: Name of the tenant
          default: "tenant1"
        repoHostUrl:
          type: string
          default: gitlab.cloudfront.net
          ui:widget: hidden
        repoUsername:
          type: string
          default: user1
          ui:widget: hidden
        repoName:
          type: string
          default: eks-cluster-mgmt
          ui:widget: hidden
        ingressDomainName:
          type: string
          default: ingress.cloudfront.net
          ui:widget: hidden
    - title: Git Repository URLs
      properties:
        addonsRepoUrl:
          title: Addons Repository URL
          type: string
          description: Git repository URL for addons
          default: "https://gitlab.cloudfront.net/user1/eks-cluster-mgmt.git"
        fleetRepoUrl:
          title: Fleet Repository URL
          type: string
          description: Git repository URL for fleet
          default: "https://gitlab.cloudfront.net/user1/eks-cluster-mgmt.git"
        platformRepoUrl:
          title: Platform Repository URL
          type: string
          description: Git repository URL for platform
          default: "https://gitlab.cloudfront.net/user1/eks-cluster-mgmt.git"
        workloadRepoUrl:
          title: Workload Repository URL
          type: string
          description: Git repository URL for workload
          default: "https://gitlab.cloudfront.net/user1/eks-cluster-mgmt.git"
    - title: Cluster Addons Configuration
      properties:
        enableIngressClassAlb:
          title: Enable Ingress Class ALB
          type: boolean
          description: Enable Ingress Class ALB addon
          default: true
        enableArgoRollouts:
          title: Enable Argo Rollouts
          type: boolean
          description: Enable Argo Rollouts addon
          default: true
        enableMetricsServer:
          title: Enable Metrics Server
          type: boolean
          description: Enable Metrics Server addon
          default: true
        enableExternalSecrets:
          title: Enable External Secrets
          type: boolean
          description: Enable External Secrets addon
          default: false
        enableKyverno:
          title: Enable Kyverno
          type: boolean
          description: Enable Kyverno addon
          default: false
        enableKyvernoPolicies:
          title: Enable Kyverno Policies
          type: boolean
          description: Enable Kyverno Policies addon
          default: false
        enableKyvernoPolicyReporter:
          title: Enable Kyverno Policy Reporter
          type: boolean
          description: Enable Kyverno Policy Reporter addon
          default: false
        enableAckIam:
          title: Enable ACK IAM
          type: boolean
          description: Enable ACK IAM addon
          default: false
        enableAckEks:
          title: Enable ACK EKS
          type: boolean
          description: Enable ACK EKS addon
          default: false
        enableAckEfs:
          title: Enable ACK EFS
          type: boolean
          description: Enable ACK EFS addon
          default: false
        enableAwsEfsCsiDriver:
          title: Enable AWS EFS CSI Driver
          type: boolean
          description: Enable AWS EFS CSI Driver addon
          default: false
  steps:
    - id: checkout
      name: Checkout repository
      action: fetch:plain
      input:
        url: https://${{ parameters.repoHostUrl }}/${{ parameters.repoUsername }}/${{ parameters.repoName }}/-/blob/main/
        targetPath: ./repo
    - id: addCluster
      name: Add new Clusters
      action: roadiehq:utils:fs:append
      input:
        path: ./repo/addons/tenants/tenant1/default/addons/multi-acct/values.yaml
        content: "\n  ${{ parameters.clusterName }}: \"${{ parameters.accountId }}\""
    - id: addKroClusterConfig
      name: Update KRO Clusters Configuration
      action: roadiehq:utils:fs:append
      input:
        path: ./repo/fleet/kro-values/tenants/tenant1/kro-clusters/values.yaml
        content: "\n  ${{ parameters.clusterName }}:\n    managementAccountId: \"${{ parameters.managementAccountId }}\"\n    accountId: \"${{ parameters.accountId }}\"\n    tenant: \"${{ parameters.tenant }}\"\n    environment: \"${{ parameters.environment }}\"\n    region: \"${{ parameters.region }}\"\n    k8sVersion: \"${{ parameters.k8sVersion }}\"\n    gitops:\n      addonsRepoUrl: \"${{ parameters.addonsRepoUrl }}\"\n      fleetRepoUrl: \"${{ parameters.fleetRepoUrl }}\"\n      platformRepoUrl: \"${{ parameters.platformRepoUrl }}\"\n      workloadRepoUrl: \"${{ parameters.workloadRepoUrl }}\"\n    addons:\n      enable_ingress_class_alb: \"${{ parameters.enableIngressClassAlb }}\"\n      enable_argo_rollouts: \"${{ parameters.enableArgoRollouts }}\"\n      enable_metrics_server: \"${{ parameters.enableMetricsServer }}\"\n      enable_external_secrets: \"${{ parameters.enableExternalSecrets }}\"\n      enable_kyverno: \"${{ parameters.enableKyverno }}\"\n      enable_kyverno_policies: \"${{ parameters.enableKyvernoPolicies }}\"\n      enable_kyverno_policy_reporter: \"${{ parameters.enableKyvernoPolicyReporter }}\"\n      enable_ack_iam: \"${{ parameters.enableAckIam }}\"\n      enable_ack_eks: \"${{ parameters.enableAckEks }}\"\n      enable_ack_efs: \"${{ parameters.enableAckEfs }}\"\n      enable_aws_efs_csi_driver: \"${{ parameters.enableAwsEfsCsiDriver }}\""
    - id: addComponent
      name: Add new component for Cluster
      action: roadiehq:utils:fs:write
      input:
        path: ./repo/backstage-templates/components/${{ parameters.clusterName }}.yaml
        content: |
          apiVersion: backstage.io/v1alpha1
          kind: Component
          metadata:
            name: ${{ parameters.clusterName }}
            description: EKS Cluster deployed by kro
            links:
              - url: https://${{ parameters.ingressDomainName }}/argocd/applications/argocd/clusters
                title: ArgoCD App URL
                icon: externalLink
              - url: https://${{ parameters.repoHostUrl }}/${{ parameters.repoUsername }}/${{ parameters.repoName }}/-/blob/main/fleet/kro-values/tenants/tenant1/kro-clusters/values.yaml
                title: Git Repo URL
                icon: github
          spec:
            owner: guests
            lifecycle: experimental
            type: service
    # - id: mergeConfig
    #   name: Update Clusters Configuration
    #   action: roadiehq:utils:merge
    #   input:
    #     path: ./repo/fleet/kro-values/tenants/tenant1/kro-clusters/values.yaml
    #     content:
    #       clusters:
    #         '${{ parameters.clusterName }}': '${{ parameters.accountId }}'
    #         preserveYamlComments: true
    # - id: parse
    #   name: read file
    #   action: roadiehq:utils:fs:parse
    #   input:
    #     path: ./repo/addons/tenants/tenant1/default/addons/multi-acct/values.yaml
    # - id: log
    #   name: Console.log
    #   action: debug:log
    #   input:
    #     message: |
    #       Content: `${{ steps['parse'].output.content }}`
    - id: createGitlabMergeRequest
      name: Create a Merge Request
      action: publish:gitlab:merge-request
      input:
        repoUrl: ${{ parameters.repoHostUrl }}?repo=${{ parameters.repoName }}&owner=${{ parameters.repoUsername }}
        title: Add new EKS cluster
        description: Add new EKS cluster to the platform
        sourcePath: ./repo
        targetPath: .
        branchName: new-cluster
        removeSourceBranch: true
        commitAction: auto
    - id: register
      name: Register
      action: catalog:register
      input:
        catalogInfoUrl: https://${{ parameters.repoHostUrl }}/${{ parameters.repoUsername }}/${{ parameters.repoName }}/-/blob/main/backstage-templates/components/${{ parameters.clusterName }}.yaml
        optional: true
  output:
    links:
      - title: Gitlab MergeRequest URL
        url: ${{ steps.createGitlabMergeRequest.output.mergeRequestUrl }}
