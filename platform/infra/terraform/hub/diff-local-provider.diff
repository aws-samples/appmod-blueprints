diff --git a/platform/infra/terraform/hub/locals.tf b/platform/infra/terraform/hub/locals.tf
index 69236a4..9a15ea4 100644
--- a/platform/infra/terraform/hub/locals.tf
+++ b/platform/infra/terraform/hub/locals.tf
@@ -189,6 +189,8 @@ locals {
       ide_password_hash = local.password_hash
       ide_password_key = local.password_key
       backstage_image = local.backstage_image
+      backstage_postgres_secret_name = "peeks-workshop-gitops-backstage-postgresql-password"
+      backstage_postgres_secret_key = "password"
     },
 
   )
diff --git a/platform/infra/terraform/hub/providers.tf b/platform/infra/terraform/hub/providers.tf
index 40d5029..fd60be1 100644
--- a/platform/infra/terraform/hub/providers.tf
+++ b/platform/infra/terraform/hub/providers.tf
@@ -1,39 +1,26 @@
+provider "aws" {
+  region = "us-east-1"  # Région fixe pour éviter la dépendance circulaire
+}
 
-provider "helm" {
-  kubernetes {
-    host                   = local.cluster_info.cluster_endpoint
-    cluster_ca_certificate = base64decode(local.cluster_info.cluster_certificate_authority_data)
+# Get cluster info from existing cluster
+data "aws_eks_cluster" "cluster_for_providers" {
+  name = var.cluster_name
+}
 
-    exec {
-      api_version = "client.authentication.k8s.io/v1beta1"
-      command     = "aws"
-      # This requires the awscli to be installed locally where Terraform is executed
-      args = [
-        "eks",
-        "get-token",
-        "--cluster-name", local.cluster_info.cluster_name,
-        "--region", local.region
-      ]
-    }
-  }
+data "aws_eks_cluster_auth" "cluster_for_providers" {
+  name = var.cluster_name
 }
 
 provider "kubernetes" {
-  host                   = local.cluster_info.cluster_endpoint
-  cluster_ca_certificate = base64decode(local.cluster_info.cluster_certificate_authority_data)
-  # insecure = true
-  exec {
-    api_version = "client.authentication.k8s.io/v1beta1"
-    command     = "aws"
-    # This requires the awscli to be installed locally where Terraform is executed
-    args = [
-      "eks",
-      "get-token",
-      "--cluster-name", local.cluster_info.cluster_name,
-      "--region", local.region
-    ]
-  }
+  host                   = data.aws_eks_cluster.cluster_for_providers.endpoint
+  cluster_ca_certificate = base64decode(data.aws_eks_cluster.cluster_for_providers.certificate_authority[0].data)
+  token                  = data.aws_eks_cluster_auth.cluster_for_providers.token
 }
 
-provider "aws" {
+provider "helm" {
+  kubernetes {
+    host                   = data.aws_eks_cluster.cluster_for_providers.endpoint
+    cluster_ca_certificate = base64decode(data.aws_eks_cluster.cluster_for_providers.certificate_authority[0].data)
+    token                  = data.aws_eks_cluster_auth.cluster_for_providers.token
+  }
 }
