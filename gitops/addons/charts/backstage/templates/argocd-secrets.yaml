---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: eso-store
  namespace: argocd
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: eso-store
  namespace: argocd
rules:
  - apiGroups: [""]
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - authorization.k8s.io
    resources:
      - selfsubjectrulesreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: eso-store
  namespace: argocd
subjects:
  - kind: ServiceAccount
    name: eso-store
    namespace: argocd
roleRef:
  kind: Role
  name: eso-store
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: external-secrets.io/v1beta1
kind: ClusterSecretStore
metadata:
  name: argocd
spec:
  provider:
    kubernetes:
      remoteNamespace: argocd
      server:
        caProvider:
          type: ConfigMap
          name: kube-root-ca.crt
          namespace: argocd
          key: ca.crt
      auth:
        serviceAccount:
          name: eso-store
          namespace: argocd
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: argocd-credentials
  namespace: backstage
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  secretStoreRef:
    name: argocd
    kind: ClusterSecretStore
  refreshInterval: "0"
  target:
    name: argocd-credentials
    creationPolicy: Owner
    deletionPolicy: Retain
  data:
    - secretKey: ARGOCD_ADMIN_PASSWORD
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: ide-password
        metadataPolicy: None
        property: password
---
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: git-credentials
  namespace: backstage
  annotations:
    argocd.argoproj.io/sync-wave: "5"
spec:
  secretStoreRef:
    name: argocd
    kind: ClusterSecretStore
  refreshInterval: "0"
  target:
    name: git-credentials
    creationPolicy: Owner
    deletionPolicy: Retain
  data:
    - secretKey: GIT_HOSTNAME
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: git-credentials
        metadataPolicy: None
        property: GIT_HOSTNAME
    - secretKey: GIT_USERNAME
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: git-credentials
        metadataPolicy: None
        property: GIT_USERNAME
    - secretKey: GIT_PASSWORD
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: git-credentials
        metadataPolicy: None
        property: GIT_PASSWORD
    - secretKey: WORKING_REPO
      remoteRef:
        conversionStrategy: Default
        decodingStrategy: None
        key: git-credentials
        metadataPolicy: None
        property: WORKING_REPO
